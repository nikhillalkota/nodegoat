{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json", "version": "2.1.0", "runs": [{"tool": {"driver": {"name": "semgrep", "semanticVersion": "0.18.0", "rules": [{"id": "java.lang.security.audit.crypto.ssl.defaulthttpclient-is-deprecated.defaulthttpclient-is-deprecated", "name": "java.lang.security.audit.crypto.ssl.defaulthttpclient-is-deprecated.defaulthttpclient-is-deprecated", "shortDescription": {"text": "DefaultHttpClient is deprecated. Further, it does not support connections\nusing TLS1.2, which makes using DefaultHttpClient a security hazard.\nUse SystemDefaultHttpClient instead, which supports TLS1.2.\n"}, "fullDescription": {"text": "DefaultHttpClient is deprecated. Further, it does not support connections\nusing TLS1.2, which makes using DefaultHttpClient a security hazard.\nUse SystemDefaultHttpClient instead, which supports TLS1.2.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.security.deserialization.pickle.avoid-shelve", "name": "python.lang.security.deserialization.pickle.avoid-shelve", "shortDescription": {"text": "Avoid using `shelve`, which uses `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"}, "fullDescription": {"text": "Avoid using `shelve`, which uses `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.requests.security.disabled-cert-validation.disabled-cert-validation", "name": "python.requests.security.disabled-cert-validation.disabled-cert-validation", "shortDescription": {"text": "Certificate verification has been explicitly disabled. This\npermits insecure connections to insecure servers. Re-enable\ncertification validation.\n"}, "fullDescription": {"text": "Certificate verification has been explicitly disabled. This\npermits insecure connections to insecure servers. Re-enable\ncertification validation.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.correctness.common-mistakes.is-comparison-string.identical-is-comparison", "name": "python.lang.correctness.common-mistakes.is-comparison-string.identical-is-comparison", "shortDescription": {"text": "Found identical comparison using is. Ensure this is what you intended."}, "fullDescription": {"text": "Found identical comparison using is. Ensure this is what you intended."}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-sha1", "name": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-sha1", "shortDescription": {"text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not \ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"}, "fullDescription": {"text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not \ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.xssrequestwrapper-is-insecure.xssrequestwrapper-is-insecure", "name": "java.lang.security.audit.xssrequestwrapper-is-insecure.xssrequestwrapper-is-insecure", "shortDescription": {"text": "It looks like you're using an implementation of XSSRequestWrapper from dzone.\n(https://www.javacodegeeks.com/2012/07/anti-cross-site-scripting-xss-filter.html)\nThe XSS filtering in this code is not secure and can be bypassed by malicious actors.\nIt is recommended to use a stack that automatically escapes in your view or templates\ninstead of filtering yourself.\n"}, "fullDescription": {"text": "It looks like you're using an implementation of XSSRequestWrapper from dzone.\n(https://www.javacodegeeks.com/2012/07/anti-cross-site-scripting-xss-filter.html)\nThe XSS filtering in this code is not secure and can be bypassed by malicious actors.\nIt is recommended to use a stack that automatically escapes in your view or templates\ninstead of filtering yourself.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.crypto.ssl.insecure-hostname-verifier.insecure-hostname-verifier", "name": "java.lang.security.audit.crypto.ssl.insecure-hostname-verifier.insecure-hostname-verifier", "shortDescription": {"text": "Insecure HostnameVerifier implementation detected. This will accept\nany SSL certificate with any hostname, which creates the possibility\nfor man-in-the-middle attacks. \n"}, "fullDescription": {"text": "Insecure HostnameVerifier implementation detected. This will accept\nany SSL certificate with any hostname, which creates the possibility\nfor man-in-the-middle attacks. \n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.correctness.list-modify-iterating.list-modify-while-iterate", "name": "python.lang.correctness.list-modify-iterating.list-modify-while-iterate", "shortDescription": {"text": "It appears that `$LIST` is a list that is being modified while in a for loop.\nThis will likely cause a runtime error or an infinite loop.\n"}, "fullDescription": {"text": "It appears that `$LIST` is a list that is being modified while in a for loop.\nThis will likely cause a runtime error or an infinite loop.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "python.lang.correctness.common-mistakes.is-comparison-string.string-is-comparison", "name": "python.lang.correctness.common-mistakes.is-comparison-string.string-is-comparison", "shortDescription": {"text": "Found string comparison using 'is' operator. The 'is' operator\nis for reference equality, not value equality, and therefore should\nnot be used to compare strings. For more information, see\nhttps://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"\n"}, "fullDescription": {"text": "Found string comparison using 'is' operator. The 'is' operator\nis for reference equality, not value equality, and therefore should\nnot be used to compare strings. For more information, see\nhttps://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "go.lang.maintainability.useless-ifelse.useless-if-conditional", "name": "go.lang.maintainability.useless-ifelse.useless-if-conditional", "shortDescription": {"text": "Detected an if block that checks for the same condition on both branches (`$X`)\n"}, "fullDescription": {"text": "Detected an if block that checks for the same condition on both branches (`$X`)\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "javascript.jsonwebtoken.security.audit.jwt-decode-without-verify.jwt-decode-without-verify", "name": "javascript.jsonwebtoken.security.audit.jwt-decode-without-verify.jwt-decode-without-verify", "shortDescription": {"text": "Detected the decoding of a JWT token without a verify step.\nJWT tokens must be verified before use, otherwise the token's\nintegrity is unknown. This means a malicious actor could forge\na JWT token with any claims. Call '.verify()' before using the token.\n"}, "fullDescription": {"text": "Detected the decoding of a JWT token without a verify step.\nJWT tokens must be verified before use, otherwise the token's\nintegrity is unknown. This means a malicious actor could forge\na JWT token with any claims. Call '.verify()' before using the token.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-DES", "name": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-DES", "shortDescription": {"text": "Detected DES cipher algorithm which is insecure. The algorithm is\nconsidered weak and has been deprecated. Use AES instead.\n"}, "fullDescription": {"text": "Detected DES cipher algorithm which is insecure. The algorithm is\nconsidered weak and has been deprecated. Use AES instead.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "name": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "shortDescription": {"text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag\nfor cookies instructs the browser to forbid client-side scripts from reading the\ncookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'\n"}, "fullDescription": {"text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag\nfor cookies instructs the browser to forbid client-side scripts from reading the\ncookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.crypto.ssl.insecure-trust-manager.insecure-trust-manager", "name": "java.lang.security.audit.crypto.ssl.insecure-trust-manager.insecure-trust-manager", "shortDescription": {"text": "Detected empty trust manager implementations. This is dangerous because it accepts any\ncertificate, enabling man-in-the-middle attacks. Consider using a KeyStore\nand TrustManagerFactory isntead.\nSee https://stackoverflow.com/questions/2642777/trusting-all-certificates-using-httpclient-over-https\nfor more information.\n"}, "fullDescription": {"text": "Detected empty trust manager implementations. This is dangerous because it accepts any\ncertificate, enabling man-in-the-middle attacks. Consider using a KeyStore\nand TrustManagerFactory isntead.\nSee https://stackoverflow.com/questions/2642777/trusting-all-certificates-using-httpclient-over-https\nfor more information.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.xml-decoder.xml-decoder", "name": "java.lang.security.audit.xml-decoder.xml-decoder", "shortDescription": {"text": "XMLDecoder should not be used to parse untrusted data.\nDeserializing user input can lead to arbitrary code execution.\nUse an alternative and explicitly disable external entities.\nSee https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html\nfor alternatives and vulnerability prevention.\n"}, "fullDescription": {"text": "XMLDecoder should not be used to parse untrusted data.\nDeserializing user input can lead to arbitrary code execution.\nUse an alternative and explicitly disable external entities.\nSee https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html\nfor alternatives and vulnerability prevention.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "go.lang.maintainability.useless-ifelse.useless-if-body", "name": "go.lang.maintainability.useless-ifelse.useless-if-body", "shortDescription": {"text": "Detected identical if-statement bodies. Is this intentional?\n"}, "fullDescription": {"text": "Detected identical if-statement bodies. Is this intentional?\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "python.requests.best-practice.use-timeout.use-timeout", "name": "python.requests.best-practice.use-timeout.use-timeout", "shortDescription": {"text": "By default, 'requests' calls wait until the connection is closed.\nThis means a 'requests' call without a timeout will hang the program\nif a response is never received. Consider setting a timeout for all \n'requests'.\n"}, "fullDescription": {"text": "By default, 'requests' calls wait until the connection is closed.\nThis means a 'requests' call without a timeout will hang the program\nif a response is never received. Consider setting a timeout for all \n'requests'.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "python.lang.correctness.return-in-init.return-in-init", "name": "python.lang.correctness.return-in-init.return-in-init", "shortDescription": {"text": "`return` should never appear inside a class __init__ function. This will cause a runtime error."}, "fullDescription": {"text": "`return` should never appear inside a class __init__ function. This will cause a runtime error."}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-rc4", "name": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-rc4", "shortDescription": {"text": "Detected RC4 cipher algorithm which is insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"}, "fullDescription": {"text": "Detected RC4 cipher algorithm which is insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal", "name": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal", "shortDescription": {"text": "Detected a potential path traversal. A malicious actor\ncould control the location of this file, to include going backwards\nin the directory with '../'. To address this, ensure that user-controlled\nvariables in file paths are sanitized. You may aslso consider using a utility\nmethod such as org.apache.commons.io.FilenameUtils.getName(...) to only\nretrieve the file name from the path.\n"}, "fullDescription": {"text": "Detected a potential path traversal. A malicious actor\ncould control the location of this file, to include going backwards\nin the directory with '../'. To address this, ensure that user-controlled\nvariables in file paths are sanitized. You may aslso consider using a utility\nmethod such as org.apache.commons.io.FilenameUtils.getName(...) to only\nretrieve the file name from the path.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.correctness.common-mistakes.default-mutable-list.default-mutable-list", "name": "python.lang.correctness.common-mistakes.default-mutable-list.default-mutable-list", "shortDescription": {"text": "Function $F mutates default list $D. Instances of default function arguments in Python are shared between function calls.  Mutating a default function argument changes the result for all function consumers. This will most likely cause unexpected results, or lead to security vulnerabilities whereby one function consumer can either view or modify the data of another function consumer."}, "fullDescription": {"text": "Function $F mutates default list $D. Instances of default function arguments in Python are shared between function calls.  Mutating a default function argument changes the result for all function consumers. This will most likely cause unexpected results, or lead to security vulnerabilities whereby one function consumer can either view or modify the data of another function consumer."}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "go.lang.security.audit.net.use-tls.use-tls", "name": "go.lang.security.audit.net.use-tls.use-tls", "shortDescription": {"text": "Found an HTTP server without TLS. Use http.ListenAndServeTLS instead.\nSee https://golang.org/pkg/net/http/#ListenAndServeTLS for more information."}, "fullDescription": {"text": "Found an HTTP server without TLS. Use http.ListenAndServeTLS instead.\nSee https://golang.org/pkg/net/http/#ListenAndServeTLS for more information."}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.correctness.return-in-init.yield-in-init", "name": "python.lang.correctness.return-in-init.yield-in-init", "shortDescription": {"text": "`yield` should never appear inside a class __init__ function. This will cause a runtime error."}, "fullDescription": {"text": "`yield` should never appear inside a class __init__ function. This will cause a runtime error."}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite", "name": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite", "shortDescription": {"text": "Detected cookie without the SameSite attribute.\n"}, "fullDescription": {"text": "Detected cookie without the SameSite attribute.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.correctness.eqeq.eqeq", "name": "java.lang.correctness.eqeq.eqeq", "shortDescription": {"text": "`$X == $X` or `$X != $X` is always true. (Unless the value compared is a float or double).\nTo test if `$X` is not-a-number, use `Double.isNaN($X)`.\n"}, "fullDescription": {"text": "`$X == $X` or `$X != $X` is always true. (Unless the value compared is a float or double).\nTo test if `$X` is not-a-number, use `Double.isNaN($X)`.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "go.lang.security.audit.net.pprof.pprof-debug-exposure", "name": "go.lang.security.audit.net.pprof.pprof-debug-exposure", "shortDescription": {"text": "The profiling 'pprof' endpoint is automatically exposed on /debug/pprof.\nThis could leak information about the server.\nInstead, use `import \"net/http/pprof\"`. See \nhttps://www.farsightsecurity.com/blog/txt-record/go-remote-profiling-20161028/\nfor more information and mitigation.\n"}, "fullDescription": {"text": "The profiling 'pprof' endpoint is automatically exposed on /debug/pprof.\nThis could leak information about the server.\nInstead, use `import \"net/http/pprof\"`. See \nhttps://www.farsightsecurity.com/blog/txt-record/go-remote-profiling-20161028/\nfor more information and mitigation.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "javascript.jose.security.jwt-exposed-credentials.jwt-exposed-credentials", "name": "javascript.jose.security.jwt-exposed-credentials.jwt-exposed-credentials", "shortDescription": {"text": "Password is exposed through JWT token payload. This is not encrypted and \nthe password could be compromised. Do not store passwords in JWT tokens.\n"}, "fullDescription": {"text": "Password is exposed through JWT token payload. This is not encrypted and \nthe password could be compromised. Do not store passwords in JWT tokens.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.servletresponse-writer-xss.servletresponse-writer-xss", "name": "java.lang.security.servletresponse-writer-xss.servletresponse-writer-xss", "shortDescription": {"text": "Cross-site scripting detected in HttpServletResponse writer with variable '$VAR'. User \ninput was detected going directly from the HttpServletRequest into output. Ensure your\ndata is properly encoded using org.owasp.encoder.Encode.forHtml: 'Encode.forHtml($VAR)'.\n"}, "fullDescription": {"text": "Cross-site scripting detected in HttpServletResponse writer with variable '$VAR'. User \ninput was detected going directly from the HttpServletRequest into output. Ensure your\ndata is properly encoded using org.owasp.encoder.Encode.forHtml: 'Encode.forHtml($VAR)'.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.correctness.dict-modify-iterating.dict-del-while-iterate", "name": "python.lang.correctness.dict-modify-iterating.dict-del-while-iterate", "shortDescription": {"text": "It appears that `$DICT[$KEY]` is a dict with items being deleted while in a for loop. This is usually a bad idea and will likely lead to a RuntimeError: dictionary changed size during iteration"}, "fullDescription": {"text": "It appears that `$DICT[$KEY]` is a dict with items being deleted while in a for loop. This is usually a bad idea and will likely lead to a RuntimeError: dictionary changed size during iteration"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "python.lang.security.audit.marshal.marshal-usage", "name": "python.lang.security.audit.marshal.marshal-usage", "shortDescription": {"text": "The marshal module is not intended to be secure against erroneous or maliciously constructed data.\nNever unmarshal data received from an untrusted or unauthenticated source.\nSee more details: https://docs.python.org/3/library/marshal.html?highlight=security\n"}, "fullDescription": {"text": "The marshal module is not intended to be secure against erroneous or maliciously constructed data.\nNever unmarshal data received from an untrusted or unauthenticated source.\nSee more details: https://docs.python.org/3/library/marshal.html?highlight=security\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "name": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "shortDescription": {"text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag\nfor cookies prevents the client from transmitting the cookie over insecure\nchannels such as HTTP. Set the 'secure' flag by calling '$COOKIE.setSecure(true);'\n"}, "fullDescription": {"text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag\nfor cookies prevents the client from transmitting the cookie over insecure\nchannels such as HTTP. Set the 'secure' flag by calling '$COOKIE.setSecure(true);'\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "go.lang.security.audit.net.formatted-template-string.formatted-template-string", "name": "go.lang.security.audit.net.formatted-template-string.formatted-template-string", "shortDescription": {"text": "Found a formatted template string passed to 'template.HTML()'.\n'template.HTML()' does not escape contents. Be absolutely sure\nthere is no user-controlled data in this template. If user data\ncan reach this template, you may have a XSS vulnerability.\n"}, "fullDescription": {"text": "Found a formatted template string passed to 'template.HTML()'.\n'template.HTML()' does not escape contents. Be absolutely sure\nthere is no user-controlled data in this template. If user data\ncan reach this template, you may have a XSS vulnerability.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.requests.security.no-auth-over-http.no-auth-over-http", "name": "python.requests.security.no-auth-over-http.no-auth-over-http", "shortDescription": {"text": "Authentication detected over HTTP. HTTP does not provide any\nencryption or protection for these authentication credentials.\nThis may expose these credentials to unauthhorized parties.\nUse 'https://' instead.\n"}, "fullDescription": {"text": "Authentication detected over HTTP. HTTP does not provide any\nencryption or protection for these authentication credentials.\nThis may expose these credentials to unauthhorized parties.\nUse 'https://' instead.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.correctness.useless-comparison.no-strings-as-booleans", "name": "python.lang.correctness.useless-comparison.no-strings-as-booleans", "shortDescription": {"text": "Using strings as booleans in Python has unexpected results.\n`\"one\" and \"two\"` will return \"two\".\n`\"one\" or \"two\"` will return \"one\".\n In Python, strings are truthy, evaluating to True.\n"}, "fullDescription": {"text": "Using strings as booleans in Python has unexpected results.\n`\"one\" and \"two\"` will return \"two\".\n`\"one\" or \"two\"` will return \"one\".\n In Python, strings are truthy, evaluating to True.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "python.lang.security.audit.network.bind.avoid-bind-to-all-interfaces", "name": "python.lang.security.audit.network.bind.avoid-bind-to-all-interfaces", "shortDescription": {"text": "Running `socket.bind` to 0.0.0.0 or empty string could unexpectedly expose the\nserver publicly as it binds to all available interfaces. Consider instead\ngetting correct address from an environment variable or configuration file.\n"}, "fullDescription": {"text": "Running `socket.bind` to 0.0.0.0 or empty string could unexpectedly expose the\nserver publicly as it binds to all available interfaces. Consider instead\ngetting correct address from an environment variable or configuration file.\n"}, "defaultConfiguration": {"level": "note"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.anonymous-ldap-bind.anonymous-ldap-bind", "name": "java.lang.security.audit.anonymous-ldap-bind.anonymous-ldap-bind", "shortDescription": {"text": "Detected anonymous LDAP bind.\nThis permits anonymous users to execute LDAP statements. Consider enforcing\nauthentication for LDAP. See https://docs.oracle.com/javase/tutorial/jndi/ldap/auth_mechs.html\nfor more information.\n"}, "fullDescription": {"text": "Detected anonymous LDAP bind.\nThis permits anonymous users to execute LDAP statements. Consider enforcing\nauthentication for LDAP. See https://docs.oracle.com/javase/tutorial/jndi/ldap/auth_mechs.html\nfor more information.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.correctness.common-mistakes.default-mutable-dict.default-mutable-dict", "name": "python.lang.correctness.common-mistakes.default-mutable-dict.default-mutable-dict", "shortDescription": {"text": "Function $F mutates default dict $D. Instances of default function arguments in Python are shared between function calls.  Mutating a default function argument changes the result for all function consumers. This will most likely cause unexpected results, or lead to security vulnerabilities whereby one function consumer can either view or modify the data of another function consumer."}, "fullDescription": {"text": "Function $F mutates default dict $D. Instances of default function arguments in Python are shared between function calls.  Mutating a default function argument changes the result for all function consumers. This will most likely cause unexpected results, or lead to security vulnerabilities whereby one function consumer can either view or modify the data of another function consumer."}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "java.lang.security.audit.script-engine-injection.script-engine-injection", "name": "java.lang.security.audit.script-engine-injection.script-engine-injection", "shortDescription": {"text": "Detected potential code injection using ScriptEngine. Ensure\nuser-controlled data cannot enter '.eval()', otherwise, this is\na code injection vulnerability.\n"}, "fullDescription": {"text": "Detected potential code injection using ScriptEngine. Ensure\nuser-controlled data cannot enter '.eval()', otherwise, this is\na code injection vulnerability.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.bad-hexa-conversion.bad-hexa-conversion", "name": "java.lang.security.audit.bad-hexa-conversion.bad-hexa-conversion", "shortDescription": {"text": "'Integer.toHexString()' strips leading zeroes from each byte if read byte-by-byte.\nThis mistake weakens the hash value computed since it introduces more collisions.\nUse 'String.format(\"%02X\", ...)' instead.\n"}, "fullDescription": {"text": "'Integer.toHexString()' strips leading zeroes from each byte if read byte-by-byte.\nThis mistake weakens the hash value computed since it introduces more collisions.\nUse 'String.format(\"%02X\", ...)' instead.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.crypto.unencrypted-socket.unencrypted-socket", "name": "java.lang.security.audit.crypto.unencrypted-socket.unencrypted-socket", "shortDescription": {"text": "This socket is not encrypted.\nThe traffic could be read by an attacker intercepting the network traffic. \nUse an SSLSocket created by 'SSLSocketFactory' or 'SSLServerSocketFactory'\ninstead\n"}, "fullDescription": {"text": "This socket is not encrypted.\nThe traffic could be read by an attacker intercepting the network traffic. \nUse an SSLSocket created by 'SSLSocketFactory' or 'SSLServerSocketFactory'\ninstead\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.security.audit.network.http-not-https-connection.http-not-https-connection", "name": "python.lang.security.audit.network.http-not-https-connection.http-not-https-connection", "shortDescription": {"text": "Detected HTTPConnectionPool. This will transmit data in cleartext.\nIt is recommended to use HTTPSConnectionPool instead for to encrypt\ncommunications.\n"}, "fullDescription": {"text": "Detected HTTPConnectionPool. This will transmit data in cleartext.\nIt is recommended to use HTTPSConnectionPool instead for to encrypt\ncommunications.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.cbc-padding-oracle.cbc-padding-oracle", "name": "java.lang.security.audit.cbc-padding-oracle.cbc-padding-oracle", "shortDescription": {"text": "Using CBC with PKCS5Padding is susceptible to padding orcale attacks. A malicious actor\ncould discern the difference between plaintext with valid or invalid padding. Further,\nCBC mode does not include any integrity checks. See https://find-sec-bugs.github.io/bugs.htm#CIPHER_INTEGRITY.\nUse 'AES/GCM/NoPadding' instead.\n"}, "fullDescription": {"text": "Using CBC with PKCS5Padding is susceptible to padding orcale attacks. A malicious actor\ncould discern the difference between plaintext with valid or invalid padding. Further,\nCBC mode does not include any integrity checks. See https://find-sec-bugs.github.io/bugs.htm#CIPHER_INTEGRITY.\nUse 'AES/GCM/NoPadding' instead.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.correctness.missing-fstring.should-be-fstring", "name": "python.lang.correctness.missing-fstring.should-be-fstring", "shortDescription": {"text": "Missing an f-string specifier for string containing variable '$X'."}, "fullDescription": {"text": "Missing an f-string specifier for string containing variable '$X'."}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "javascript.lang.security.spawn-git-clone.spawn-git-clone", "name": "javascript.lang.security.spawn-git-clone.spawn-git-clone", "shortDescription": {"text": "Git allows shell commands to be specified in ext URLs for remote repositories.\nFor example, git clone 'ext::sh -c whoami% >&2' will execute the whoami command to try to connect to a remote repository.\nMake sure that the URL is not controlled by external input.\n"}, "fullDescription": {"text": "Git allows shell commands to be specified in ext URLs for remote repositories.\nFor example, git clone 'ext::sh -c whoami% >&2' will execute the whoami command to try to connect to a remote repository.\nMake sure that the URL is not controlled by external input.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.crypto.no-static-initialization-vector.no-static-initialization-vector", "name": "java.lang.security.audit.crypto.no-static-initialization-vector.no-static-initialization-vector", "shortDescription": {"text": "Initialization Vectors (IVs) for block ciphers should be randomly generated\neach time they are used. Using a static IV means the same plaintext\nencrypts to the same ciphertext every time, weakening the strength\nof the encryption.\n"}, "fullDescription": {"text": "Initialization Vectors (IVs) for block ciphers should be randomly generated\neach time they are used. Using a static IV means the same plaintext\nencrypts to the same ciphertext every time, weakening the strength\nof the encryption.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "go.lang.security.audit.crypto.tls.tls-with-insecure-cipher", "name": "go.lang.security.audit.crypto.tls.tls-with-insecure-cipher", "shortDescription": {"text": "Detected an insecure CipherSuite via the 'tls' module. This suite is considered weak.\nUse the function 'tls.CipherSuites()' to get a list of good cipher suites.\nSee https://golang.org/pkg/crypto/tls/#InsecureCipherSuites\nfor why and what other cipher suites to use.\n"}, "fullDescription": {"text": "Detected an insecure CipherSuite via the 'tls' module. This suite is considered weak.\nUse the function 'tls.CipherSuites()' to get a list of good cipher suites.\nSee https://golang.org/pkg/crypto/tls/#InsecureCipherSuites\nfor why and what other cipher suites to use.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.http-response-splitting.http-response-splitting", "name": "java.lang.security.audit.http-response-splitting.http-response-splitting", "shortDescription": {"text": "Older Java application servers are vulnreable to HTTP response splitting, which may occur if an HTTP\nrequest can be injected with CRLF characters. This finding is reported for completeness; it is recommended\nto ensure your environment is not affected by testing this yourself.\n"}, "fullDescription": {"text": "Older Java application servers are vulnreable to HTTP response splitting, which may occur if an HTTP\nrequest can be injected with CRLF characters. This finding is reported for completeness; it is recommended\nto ensure your environment is not affected by testing this yourself.\n"}, "defaultConfiguration": {"level": "note"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.command-injection-formatted-runtime-call.command-injection-formatted-runtime-call", "name": "java.lang.security.audit.command-injection-formatted-runtime-call.command-injection-formatted-runtime-call", "shortDescription": {"text": "A formatted or concatenated string was detected as input to a java.lang.Runtime call.\nThis is dangerous if a variable is controlled by user input and could result in a\ncommand injection. Ensure your variables are not controlled by users or sufficiently sanitized.\n"}, "fullDescription": {"text": "A formatted or concatenated string was detected as input to a java.lang.Runtime call.\nThis is dangerous if a variable is controlled by user input and could result in a\ncommand injection. Ensure your variables are not controlled by users or sufficiently sanitized.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.unvalidated-redirect.unvalidated-redirect", "name": "java.lang.security.audit.unvalidated-redirect.unvalidated-redirect", "shortDescription": {"text": "Application redirects to a destination URL specified by a user-supplied\nparameter that is not validated. This could direct users to malicious locations.\nConsider using a whitelist to validate URLs.\n"}, "fullDescription": {"text": "Application redirects to a destination URL specified by a user-supplied\nparameter that is not validated. This could direct users to malicious locations.\nConsider using a whitelist to validate URLs.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.correctness.exit.use-sys-exit", "name": "python.lang.correctness.exit.use-sys-exit", "shortDescription": {"text": "Use `sys.exit` over the python shell `exit` built-in. `exit` is a helper for the interactive shell and may not be available on all Python implementations. https://stackoverflow.com/questions/6501121/difference-between-exit-and-sys-exit-in-python"}, "fullDescription": {"text": "Use `sys.exit` over the python shell `exit` built-in. `exit` is a helper for the interactive shell and may not be available on all Python implementations. https://stackoverflow.com/questions/6501121/difference-between-exit-and-sys-exit-in-python"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "python.lang.security.audit.logging.listeneval.listen-eval", "name": "python.lang.security.audit.logging.listeneval.listen-eval", "shortDescription": {"text": "Because portions of the logging configuration are passed through eval(),\nuse of this function may open its users to a security risk. While the\nfunction only binds to a socket on localhost, and so does not accept\nconnections from remote machines, there are scenarios where untrusted\ncode could be run under the account of the process which calls listen().\nSee more details at https://docs.python.org/3/library/logging.config.html?highlight=security#logging.config.listen\n"}, "fullDescription": {"text": "Because portions of the logging configuration are passed through eval(),\nuse of this function may open its users to a security risk. While the\nfunction only binds to a socket on localhost, and so does not accept\nconnections from remote machines, there are scenarios where untrusted\ncode could be run under the account of the process which calls listen().\nSee more details at https://docs.python.org/3/library/logging.config.html?highlight=security#logging.config.listen\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "go.lang.security.audit.reflect-makefunc.reflect-makefunc", "name": "go.lang.security.audit.reflect-makefunc.reflect-makefunc", "shortDescription": {"text": "'reflect.MakeFunc' detected. This will sidestep protections that are\nnormally afforded by Go's type system. Audit this call and be sure that \nuser input cannot be used to affect the code generated by MakeFunc; \notherwise, you will have a serious security vulnerability.\n"}, "fullDescription": {"text": "'reflect.MakeFunc' detected. This will sidestep protections that are\nnormally afforded by Go's type system. Audit this call and be sure that \nuser input cannot be used to affect the code generated by MakeFunc; \notherwise, you will have a serious security vulnerability.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.correctness.useless-eqeq.useless-eqeq", "name": "python.lang.correctness.useless-eqeq.useless-eqeq", "shortDescription": {"text": "This is always True: `$X == $X` or `$X != $X`. If testing for floating point NaN, use `math.isnan($X)`,\nor `cmath.isnan($X)` if the number is complex.\n"}, "fullDescription": {"text": "This is always True: `$X == $X` or `$X != $X`. If testing for floating point NaN, use `math.isnan($X)`,\nor `cmath.isnan($X)` if the number is complex.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "python.lang.security.deserialization.avoid-pyyaml-load.avoid-pyyaml-load", "name": "python.lang.security.deserialization.avoid-pyyaml-load.avoid-pyyaml-load", "shortDescription": {"text": "Avoid using `load()`. `PyYAML.load` can create arbitrary Python\nobjects. A malicious actor could exploit this to run arbitrary\ncode. Use `safe_load()` instead.\n"}, "fullDescription": {"text": "Avoid using `load()`. `PyYAML.load` can create arbitrary Python\nobjects. A malicious actor could exploit this to run arbitrary\ncode. Use `safe_load()` instead.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "go.lang.security.audit.database.string-formatted-query.string-formatted-query", "name": "go.lang.security.audit.database.string-formatted-query.string-formatted-query", "shortDescription": {"text": "String-formatted SQL query detected. This could lead to SQL injection if\nthe string is not sanitized properly. Audit this call to ensure the\nSQL is not manipulatable by external data.\n"}, "fullDescription": {"text": "String-formatted SQL query detected. This could lead to SQL injection if\nthe string is not sanitized properly. Audit this call to ensure the\nSQL is not manipulatable by external data.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.crypto.weak-hash.use-of-sha1", "name": "java.lang.security.audit.crypto.weak-hash.use-of-sha1", "shortDescription": {"text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not \ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"}, "fullDescription": {"text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not \ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "javascript.jose.security.jwt-none-alg.jwt-none-alg", "name": "javascript.jose.security.jwt-none-alg.jwt-none-alg", "shortDescription": {"text": "Detected use of the 'none' algorithm in a JWT token.\nThe 'none' algorithm assumes the integrity of the token has already\nbeen verified. This would allow a malicious actor to forge a JWT token\nthat will automatically be verified. Do not explicitly use the 'none'\nalgorithm. Instead, use an algorithm such as 'HS256'.\n"}, "fullDescription": {"text": "Detected use of the 'none' algorithm in a JWT token.\nThe 'none' algorithm assumes the integrity of the token has already\nbeen verified. This would allow a malicious actor to forge a JWT token\nthat will automatically be verified. Do not explicitly use the 'none'\nalgorithm. Instead, use an algorithm such as 'HS256'.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.correctness.unchecked-returns.unchecked-subprocess-call", "name": "python.lang.correctness.unchecked-returns.unchecked-subprocess-call", "shortDescription": {"text": "This is not checking the return value of this subprocess call; if it fails no exception will be raised. Consider subprocess.check_call() instead"}, "fullDescription": {"text": "This is not checking the return value of this subprocess call; if it fails no exception will be raised. Consider subprocess.check_call() instead"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string", "name": "java.lang.security.audit.formatted-sql-string.formatted-sql-string", "shortDescription": {"text": "Detected a formatted string in a SQL statement. This could lead to SQL\ninjection if variables in the SQL statement are not properly sanitized.\nUse a prepared statements (java.sql.PreparedStatement) instead. You\ncan obtain a PreparedStatement using 'connection.prepareStatement'.\n"}, "fullDescription": {"text": "Detected a formatted string in a SQL statement. This could lead to SQL\ninjection if variables in the SQL statement are not properly sanitized.\nUse a prepared statements (java.sql.PreparedStatement) instead. You\ncan obtain a PreparedStatement using 'connection.prepareStatement'.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.ldap-injection.ldap-injection", "name": "java.lang.security.audit.ldap-injection.ldap-injection", "shortDescription": {"text": "Detected non-constant data passed into an LDAP query. If this data can be\ncontrolled by an external user, this is an LDAP injection.\nEnsure data passed to an LDAP query is not controllable; or properly sanitize\nthe data.\n"}, "fullDescription": {"text": "Detected non-constant data passed into an LDAP query. If this data can be\ncontrolled by an external user, this is an LDAP injection.\nEnsure data passed to an LDAP query is not controllable; or properly sanitize\nthe data.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "javascript.lang.correctness.useless-eqeq.eqeq-is-bad", "name": "javascript.lang.correctness.useless-eqeq.eqeq-is-bad", "shortDescription": {"text": "Detected a useless comparison operation `$X == $X` or `$X != $X`. This \noperation is always true.\nIf testing for floating point NaN, use `math.isnan`, or\n`cmath.isnan` if the number is complex.\n"}, "fullDescription": {"text": "Detected a useless comparison operation `$X == $X` or `$X != $X`. This \noperation is always true.\nIf testing for floating point NaN, use `math.isnan`, or\n`cmath.isnan` if the number is complex.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "python.lang.security.deserialization.pickle.avoid-pickle", "name": "python.lang.security.deserialization.pickle.avoid-pickle", "shortDescription": {"text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"}, "fullDescription": {"text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.crypto.weak-hash.use-of-md5", "name": "java.lang.security.audit.crypto.weak-hash.use-of-md5", "shortDescription": {"text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not \ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"}, "fullDescription": {"text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not \ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "go.lang.security.audit.crypto.insecure_ssh.avoid-ssh-insecure-ignore-host-key", "name": "go.lang.security.audit.crypto.insecure_ssh.avoid-ssh-insecure-ignore-host-key", "shortDescription": {"text": "Disabled host key verification detected. This allows man-in-the-middle\nattacks. Use the 'golang.org/x/crypto/ssh/knownhosts' package to do\nhost key verification.\nSee https://skarlso.github.io/2019/02/17/go-ssh-with-host-key-verification/\nto learn more about the problem and how to fix it.\n"}, "fullDescription": {"text": "Disabled host key verification detected. This allows man-in-the-middle\nattacks. Use the 'golang.org/x/crypto/ssh/knownhosts' package to do\nhost key verification.\nSee https://skarlso.github.io/2019/02/17/go-ssh-with-host-key-verification/\nto learn more about the problem and how to fix it.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "javascript.jose.security.jwt-hardcode.hardcoded-jwt-secret", "name": "javascript.jose.security.jwt-hardcode.hardcoded-jwt-secret", "shortDescription": {"text": "Hardcoded JWT secret or private key is used.\nThis is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html\nConsider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables: process.env.SECRET)\n"}, "fullDescription": {"text": "Hardcoded JWT secret or private key is used.\nThis is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html\nConsider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables: process.env.SECRET)\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.weak-ssl-context.weak-ssl-context", "name": "java.lang.security.audit.weak-ssl-context.weak-ssl-context", "shortDescription": {"text": "An insecure SSL context was detected. TLS versions 1.0, 1.1, and all SSL versions\nare considered weak encryption and are deprecated.\nUse SSLContext.getInstance(\"TLSv1.2\") for the best security.\n"}, "fullDescription": {"text": "An insecure SSL context was detected. TLS versions 1.0, 1.1, and all SSL versions\nare considered weak encryption and are deprecated.\nUse SSLContext.getInstance(\"TLSv1.2\") for the best security.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.security.deserialization.pickle.avoid-cPickle", "name": "python.lang.security.deserialization.pickle.avoid-cPickle", "shortDescription": {"text": "Avoid using `cPickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"}, "fullDescription": {"text": "Avoid using `cPickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "go.lang.security.audit.crypto.ssl.ssl-v3-is-insecure", "name": "go.lang.security.audit.crypto.ssl.ssl-v3-is-insecure", "shortDescription": {"text": "SSLv3 is insecure because it has known vulnerabilities.\nStarting with go1.14, SSLv3 will be removed. Instead, use \n'tls.VersionTLS13'.\n"}, "fullDescription": {"text": "SSLv3 is insecure because it has known vulnerabilities.\nStarting with go1.14, SSLv3 will be removed. Instead, use \n'tls.VersionTLS13'.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.crypto.no-null-cipher.no-null-cipher", "name": "java.lang.security.audit.crypto.no-null-cipher.no-null-cipher", "shortDescription": {"text": "NullCipher was detected. This will not encrypt anything;\nthe cipher text will be the same as the plain text. Use\na valid, secure cipher: Cipher.getInstance(\"AES/CBC/PKCS7PADDING\").\nSee https://owasp.org/www-community/Using_the_Java_Cryptographic_Extensions\nfor more information.\n"}, "fullDescription": {"text": "NullCipher was detected. This will not encrypt anything;\nthe cipher text will be the same as the plain text. Use\na valid, secure cipher: Cipher.getInstance(\"AES/CBC/PKCS7PADDING\").\nSee https://owasp.org/www-community/Using_the_Java_Cryptographic_Extensions\nfor more information.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.correctness.exceptions.exceptions.raise-not-base-exception", "name": "python.lang.correctness.exceptions.exceptions.raise-not-base-exception", "shortDescription": {"text": "In Python3, a runtime `TypeError` will be thrown if you attempt to raise an object or class which does not inherit from `BaseException`"}, "fullDescription": {"text": "In Python3, a runtime `TypeError` will be thrown if you attempt to raise an object or class which does not inherit from `BaseException`"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": []}}, {"id": "javascript.node-expat.security.audit.expat-xxe.expat-xxe", "name": "javascript.node-expat.security.audit.expat-xxe.expat-xxe", "shortDescription": {"text": "If unverified user data can reach the XML Parser it can result in XML External or\nInternal Entity (XXE) Processing vulnerabilities\n"}, "fullDescription": {"text": "If unverified user data can reach the XML Parser it can result in XML External or\nInternal Entity (XXE) Processing vulnerabilities\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret", "name": "javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret", "shortDescription": {"text": "Hardcoded JWT secret or private key is used.\nThis is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html\nConsider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables: process.env.SECRET)\n"}, "fullDescription": {"text": "Hardcoded JWT secret or private key is used.\nThis is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html\nConsider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables: process.env.SECRET)\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "javascript.jsonwebtoken.security.jwt-none-alg.jwt-none-alg", "name": "javascript.jsonwebtoken.security.jwt-none-alg.jwt-none-alg", "shortDescription": {"text": "Detected use of the 'none' algorithm in a JWT token.\nThe 'none' algorithm assumes the integrity of the token has already\nbeen verified. This would allow a malicious actor to forge a JWT token\nthat will automatically be verified. Do not explicitly use the 'none'\nalgorithm. Instead, use an algorithm such as 'HS256'.\n"}, "fullDescription": {"text": "Detected use of the 'none' algorithm in a JWT token.\nThe 'none' algorithm assumes the integrity of the token has already\nbeen verified. This would allow a malicious actor to forge a JWT token\nthat will automatically be verified. Do not explicitly use the 'none'\nalgorithm. Instead, use an algorithm such as 'HS256'.\n"}, "defaultConfiguration": {"level": "error"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.object-deserialization.object-deserialization", "name": "java.lang.security.audit.object-deserialization.object-deserialization", "shortDescription": {"text": "Found object deserialization using ObjectInputStream. Deserializing entire\nJava objects is dangerous because malicious actors can create Java object\nstreams with unintended consequences. Ensure that the objects being deserialized\nare not user-controlled. If this must be done, consider using HMACs to sign\nthe data stream to make sure it is not tampered with, or consider only\ntransmitting object fields and populating a new object.\n"}, "fullDescription": {"text": "Found object deserialization using ObjectInputStream. Deserializing entire\nJava objects is dangerous because malicious actors can create Java object\nstreams with unintended consequences. Ensure that the objects being deserialized\nare not user-controlled. If this must be done, consider using HMACs to sign\nthe data stream to make sure it is not tampered with, or consider only\ntransmitting object fields and populating a new object.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.security.deserialization.pickle.avoid-dill", "name": "python.lang.security.deserialization.pickle.avoid-dill", "shortDescription": {"text": "Avoid using `dill`, which uses `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"}, "fullDescription": {"text": "Avoid using `dill`, which uses `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "java.lang.security.audit.crypto.ssl.avoid-implementing-custom-digests.avoid-implementing-custom-digests", "name": "java.lang.security.audit.crypto.ssl.avoid-implementing-custom-digests.avoid-implementing-custom-digests", "shortDescription": {"text": "Cryptographic algorithms are notoriously difficult to get right. By implementing\na custom message digest, you risk introducing security issues into your program.\nUse one of the many sound message digests already available to you:\nMessageDigest sha256Digest = MessageDigest.getInstance(\"SHA256\");\n"}, "fullDescription": {"text": "Cryptographic algorithms are notoriously difficult to get right. By implementing\na custom message digest, you risk introducing security issues into your program.\nUse one of the many sound message digests already available to you:\nMessageDigest sha256Digest = MessageDigest.getInstance(\"SHA256\");\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5", "name": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5", "shortDescription": {"text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not \ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead. \n"}, "fullDescription": {"text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not \ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead. \n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": ["cwe", "owasp"]}}, {"id": "python.lang.correctness.common-mistakes.string-concat-in-list.string-concat-in-list", "name": "python.lang.correctness.common-mistakes.string-concat-in-list.string-concat-in-list", "shortDescription": {"text": "Detected strings implicitly concatenated inside a list.\nPython will implicitly concatenate strings when not explicitly delimited.\nWas this supposed to be individual elements of th list?\n"}, "fullDescription": {"text": "Detected strings implicitly concatenated inside a list.\nPython will implicitly concatenate strings when not explicitly delimited.\nWas this supposed to be individual elements of th list?\n"}, "defaultConfiguration": {"level": "warning"}, "properties": {"precision": "very-high", "tags": []}}]}}, "results": [{"ruleId": "javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret", "message": {"text": "Hardcoded JWT secret or private key is used.\nThis is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html\nConsider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables: process.env.SECRET)\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "juice-shop-master/lib/insecurity.js", "uriBaseId": "%SRCROOT%"}, "region": {"startLine": 9, "startColumn": 1, "endLine": 34, "endColumn": 112}}}]}, {"ruleId": "javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret", "message": {"text": "Hardcoded JWT secret or private key is used.\nThis is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html\nConsider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables: process.env.SECRET)\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "juice-shop-master/test/api/2faSpec.js", "uriBaseId": "%SRCROOT%"}, "region": {"startLine": 12, "startColumn": 1, "endLine": 156, "endColumn": 3}}}]}]}]}
